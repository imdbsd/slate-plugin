[{"/Users/temporary/Works/personal/slate-plugin/playground/src/SlateStabilo.stories.tsx":"1","/Users/temporary/Works/personal/slate-plugin/playground/src/SlatePasteUrl.stories.tsx":"2","/Users/temporary/Works/personal/slate-plugin/playground/src/SlateStringDeserialize.stories.tsx":"3","/Users/temporary/Works/personal/slate-plugin/playground/src/SlateStringDeserialize.tsx":"4","/Users/temporary/Works/personal/slate-plugin/playground/src/SlatePasteUrl.tsx":"5","/Users/temporary/Works/personal/slate-plugin/playground/src/SlateStabilo.tsx":"6","/Users/temporary/Works/personal/slate-plugin/playground/src/SlateTypewriter.stories.tsx":"7","/Users/temporary/Works/personal/slate-plugin/playground/src/SlateTypewriter.tsx":"8"},{"size":1961,"mtime":1621665069179,"results":"9","hashOfConfig":"10"},{"size":444,"mtime":1609567894988,"results":"11","hashOfConfig":"10"},{"size":543,"mtime":1609054016105,"results":"12","hashOfConfig":"10"},{"size":774,"mtime":1621749102033,"results":"13","hashOfConfig":"10"},{"size":2433,"mtime":1621740478535,"results":"14","hashOfConfig":"10"},{"size":1069,"mtime":1621741680646,"results":"15","hashOfConfig":"10"},{"size":373,"mtime":1621749206684,"results":"16","hashOfConfig":"10"},{"size":821,"mtime":1621749147676,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3ku3ya",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/temporary/Works/personal/slate-plugin/playground/src/SlateStabilo.stories.tsx",[],["36","37"],"/Users/temporary/Works/personal/slate-plugin/playground/src/SlatePasteUrl.stories.tsx",[],"/Users/temporary/Works/personal/slate-plugin/playground/src/SlateStringDeserialize.stories.tsx",[],"/Users/temporary/Works/personal/slate-plugin/playground/src/SlateStringDeserialize.tsx",[],"/Users/temporary/Works/personal/slate-plugin/playground/src/SlatePasteUrl.tsx",["38"],"import {useState, useMemo, FC} from 'react'\nimport {createEditor, Node} from 'slate'\nimport {Slate, Editable, withReact, DefaultElement} from 'slate-react'\nimport {usePasteUrl, Options} from '@imdbsd/slate-paste-url-plugin'\n\nexport type Props = {\n  defaultType?: string\n  patterns?:\n    | {capture: string; type?: string}\n    | {capture: string; type?: string}[]\n}\n\nconst Editor: FC<Props> = (props) => {\n  const options: Options = {\n    defaultType: props.defaultType,\n    patterns: props.patterns\n      ? Array.isArray(props.patterns)\n        ? props.patterns.map((pattern) => ({\n            type: pattern.type,\n            capture: new RegExp(pattern.capture, 'i'),\n          }))\n        : {\n            type: props.patterns.type,\n            capture: new RegExp(props.patterns.capture, 'i'),\n          }\n      : undefined,\n  }\n  const withPasteUrl = usePasteUrl(options)\n  const editor = useMemo(() => withPasteUrl(withReact(createEditor())), [])\n  const [value, setValue] = useState<Node[]>([\n    {\n      type: 'paragraph',\n      children: [\n        {\n          text: `Slate paste url example, try block some text and paste url or github url to the blocked text.\n            `,\n        },\n      ],\n    },\n    {\n      type: 'paragraph',\n      children: [\n        {\n          text:\n            'To change how the url rendered, edit the renderElement in SlatePasteUrl.tsx',\n        },\n      ],\n    },\n  ])\n\n  return (\n    <Slate\n      editor={editor}\n      value={value}\n      onChange={(newValue) => setValue(newValue)}\n    >\n      <Editable\n        renderElement={(props) => {\n          switch (props.element.type) {\n            case 'link': {\n              return (\n                <a\n                  href={props.element.link as string}\n                  style={{fontWeight: 'bold'}}\n                  {...props.attributes}\n                >\n                  {props.children}\n                </a>\n              )\n            }\n            case 'github_link': {\n              return (\n                <a\n                  href={props.element.link as string}\n                  style={{fontWeight: 'bold', color: 'blue'}}\n                  {...props.attributes}\n                >\n                  {props.children}\n                </a>\n              )\n            }\n            default: {\n              return <DefaultElement {...props} />\n            }\n          }\n        }}\n      />\n    </Slate>\n  )\n}\n\nexport default Editor\n","/Users/temporary/Works/personal/slate-plugin/playground/src/SlateStabilo.tsx",[],"/Users/temporary/Works/personal/slate-plugin/playground/src/SlateTypewriter.stories.tsx",[],"/Users/temporary/Works/personal/slate-plugin/playground/src/SlateTypewriter.tsx",["39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":29,"column":73,"nodeType":"46","endLine":29,"endColumn":75,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":28,"nodeType":"50","messageId":"51","endLine":1,"endColumn":37},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'withPasteUrl'. Either include it or remove the dependency array.","ArrayExpression",["54"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [withPasteUrl]",{"range":"57","text":"58"},[947,949],"[withPasteUrl]"]